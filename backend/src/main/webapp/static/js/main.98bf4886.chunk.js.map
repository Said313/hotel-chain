{"version":3,"sources":["routes/Home/Home.js","api/path.js","routes/Auth/Login.js","actions/index.js","actions/types.js","routes/Auth/Signup.js","components/Navigation/Navigation.js","routes/Profile/Profile.js","routes/Booking/Booking.js","routes/Booking/QueryResults.js","App.js","reducers/isLogged.js","reducers/user.js","reducers/hotelsList.js","reducers/index.js","configureStore.js","index.js"],"names":["Home","isLogged","useSelector","state","user","className","firstname","path","Login","dispatch","useDispatch","history","useHistory","useForm","register","handleSubmit","errors","useState","loginError","setLoginError","onSubmit","formData","axios","post","serverPath","login","logLogin","password","logPassword","then","res","console","log","data","Object","keys","length","type","payload","push","catch","error","window","alert","name","placeholder","required","ref","minLength","style","color","onClick","Signup","mode","watch","validLogin","setValidLogin","errorMessage","errMessage","loginValue","document","getElementById","value","lastname","id_type","idType","id_number","idNumber","address","mobile_phone","mobilePhone","home_phone","homePhone","category","hotel_id","user_type","validate","letters","test","digits","confirmPassword","repeatPassword","id","onChange","target","htmlFor","Navigation","toProfile","to","icon","faUserCircle","Profile","repeat","pass","setPass","Booking","event","preventDefault","dest","querySelector","startDate","endDate","destination","start","end","QueryResults","hotelsList","forEach","hotel","App","basename","exact","Component","connect","isLoggedReducer","action","userReducer","hotelsListReducer","all","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","allReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","StrictMode","loading"],"mappings":"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","file":"static/js/main.98bf4886.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst Home = () => {\n\n    const isLogged = useSelector(state => state.isLogged);\n    const user = useSelector(state => state.user);\n\n    return (\n        <main className=\"Home\">\n            <h2 className=\"homeMainText\">This is home page for {isLogged ? user.firstname : \"guest\"}!</h2>\n            <h3 className=\"homeWelcome\">Welcome to our Hotel Chain!</h3>\n            <p className=\"homeText\">At our Hotel Chain, all-inclusive is synonymous with luxury. Our unique All Inclusive â€“ All Exclusive offering combines all-inclusive advantages with exclusive privileges. \n                The Hotel Chain offers exceptional escapes that go beyond the imagination to open a new world of horizons for our guests. Our expertise for balancing the ultra-all-inclusive concept with a vibrant, \n                luxury ambience and family friendly adventures truly defines the Rixos experience. Rixos makes holiday dreams come true for everyone.</p>\n        </main>\n    );\n}\n\nexport default Home;","const path = \"http://localhost:8080/backend_war_exploded\";\n\nexport default path;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { signIn, setUser, deleteUser, signOut, signInAt } from '../../actions';\n\n\nimport serverPath from '../../api/path';\n\nconst Login = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { register, errors, handleSubmit } = useForm();\n    const [loginError, setLoginError] = useState(\"\");\n\n    const logIn = formData => {\n        axios.post(`${serverPath}/services/auth/login`, {\n                login: formData.logLogin,\n                password: formData.logPassword,\n            })\n            .then(res => {\n                console.log(res.data);\n                console.log(Object.keys(res.data).length);\n                if(!(Object.keys(res.data).length === 0)){\n\n                    dispatch(signIn());\n                    dispatch(setUser(res.data));\n\n                    setLoginError(\"\");\n                    history.push('/');\n                } else {\n\n                    dispatch(deleteUser());\n                    dispatch(signOut());\n\n                    setLoginError(\"Invalid login or password!\");\n                }\n            })\n            .catch((error)=>{\n                dispatch(deleteUser());\n                dispatch(signOut());\n                \n                window.alert(\"Cannot access the server!\");\n                console.log(error);\n             });\n    }\n\n    return (\n        <div className=\"Login\">\n            <div>\n                <h3>Log in</h3>\n                <form onSubmit={handleSubmit(logIn)}>\n                    <div>\n                        <input \n                            type=\"text\" \n                            className=\"loginInput\"\n                            name=\"logLogin\"\n                            placeholder=\"Enter login\"\n                            required\n                            ref={register({required: true})}\n                        />\n                    </div>\n                    <div>\n                        <input \n                            type=\"password\" \n                            className=\"loginInput\"\n                            name=\"logPassword\"\n                            placeholder=\"Enter password\"\n                            required\n                            minLength=\"6\"\n                            ref={register({required: true})}\n                        />\n                    </div>\n                    {loginError && <p style={{color: \"red\"}}>{loginError}</p>}\n                    <button className=\"loginButton\" type=\"submit\">Log in</button>\n                    <p className=\"toSignupText\">Do not have an account?</p>\n                    <button className=\"signupButton\" onClick={()=>{history.push('/signup')}}>Sign up</button>\n                </form>\n            </div>\n        </div>\n    );;\n}\n\nexport default Login;","import * as actions from './types';\n\nexport const signIn = () => ({type: actions.SIGN_IN});\n\nexport const signOut = () => ({type: actions.SIGN_OUT});\n\nexport const setUser = user => ({type: actions.SET_USER, payload: user});\n\nexport const deleteUser = () => ({type: actions.DELETE_USER});\n\nexport const setHotelsList = hotelsList => ({type: actions.SET_HOTELS_LIST, payload: hotelsList});\n\nexport const clearHotelsList = () => ({type: actions.CLEAR_HOTELS_LIST});","export const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const SET_USER = \"SET_USER\";\nexport const DELETE_USER = \"DELETE_USER\";\nexport const SET_HOTELS_LIST = \"SET_HOTELS_LIST\";\nexport const CLEAR_HOTELS_LIST = \"CLEAR_HOTELS_LIST\";\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\nimport axios from 'axios';\n\nimport serverPath from '../../api/path';\n\nconst Signup = () => {\n\n    const history = useHistory();\n    const { register, errors, watch, handleSubmit } = useForm({mode:\"onChange\"});\n    const [validLogin, setValidLogin] = useState(true);\n\n    const errorMessage = errMessage => {\n        return <p className=\"validError\">{errMessage}</p>\n    }\n\n    const handleLogin = ({target}) => {\n        axios.post(`${serverPath}/services/auth/checkLogin`, {\n            login: target.value,\n            password: \"\",\n        })\n            .then(res => {\n                setValidLogin(!res.data);\n            })\n            .catch(error => {\n                window.alert(\"Cannot access the server!\");\n                console.log(error);\n            });\n    }\n\n    const onSubmit = formData => {\n        if(validLogin){\n            const loginValue = document.getElementById('signLogin').value;\n            axios.post(`${serverPath}/services/auth/signup`, {\n                firstname: formData.firstname,\n                lastname: formData.lastname,\n                password: formData.password,\n                login: loginValue,\n                id_type: formData.idType,\n                id_number: formData.idNumber,\n                address: formData.address,\n                mobile_phone: formData.mobilePhone,\n                home_phone: formData.homePhone,\n                category: formData.category,\n                hotel_id: 0,\n                user_type: \"guest\",\n              })\n              .then(res => {\n                window.alert(\"You are signed up successfully!\");\n                history.push('/login');\n              })\n              .catch(error => {\n                window.alert(\"Cannot access the server!\");\n                console.log(error);\n              });    \n        }\n        \n    }\n\n    return (\n        <div className=\"Signup\">\n            <h3>Sign up</h3>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div>\n                    <input \n                        type=\"text\" \n                        className=\"signInput\" \n                        name=\"firstname\"\n                        placeholder=\"Firstname\"\n                        required\n                        ref={register({required: true})}\n                    />\n                </div>\n                {errors.firstname && errorMessage('Firstname is required!')}\n\n                <div>\n                    <input \n                        type=\"text\" \n                        className=\"signInput\"\n                        name=\"lastname\"\n                        placeholder=\"Lastname\"\n                        required\n                        ref={register({required: true})}\n                    />\n                    \n                </div>\n                {errors.lastname && errorMessage('Lastname is required!')}\n                <div>\n                    <input \n                        type=\"password\" \n                        className=\"signInput\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        ref={register({minLength: 6, validate: {\n                            letters: value => /[a-zA-Z]/.test(value),\n                            digits: value => /[0-9]/.test(value),\n                        }})}\n                    />\n                    \n                </div>\n                {errors.password && errors.password.type === \"letters\" && errorMessage('Password should contain at least 1 english letter!')}\n                {errors.password && errors.password.type === \"minLength\" && errorMessage('Password should contain at least 6 characters!')}\n                {errors.password && errors.password.type === \"digits\" && errorMessage('Password should contain at least 1 digit!')}\n                <div>\n                    <input \n                        type=\"password\" \n                        className=\"signInput\"\n                        name=\"repeatPassword\"\n                        placeholder=\"Re-type password\"\n                        ref={register({validate: {\n                            confirmPassword: value => value === watch('password'),\n                        }})}\n                    />\n                    \n                </div>\n                {errors.repeatPassword && errors.repeatPassword.type === \"confirmPassword\" && errorMessage('Passwords do not match!')}\n                <div>\n                    <input \n                        type=\"text\"\n                        id=\"signLogin\"\n                        className=\"signInput\"\n                        name=\"signLogin\"\n                        placeholder=\"Login\"\n                        required\n                        onChange={handleLogin}\n                    />\n                    \n                </div>\n                {!validLogin && errorMessage('This login is not available!')}\n                <div>\n                    <input \n                        type=\"text\"\n                        className=\"signInput\"\n                        name=\"address\"\n                        placeholder=\"Address\"\n                        required\n                        ref={register({required: true})}\n                    />\n                    \n                </div>\n                {errors.address && errorMessage('Address is required!')}\n                <div className=\"signIdType\">\n                    <label htmlFor=\"idType\" id=\"id_type\">ID type: </label>\n                    <select \n                        name=\"idType\"\n                        required\n                        ref={register({required: true})}\n                    >\n                        <option value=\"\"></option>\n                        <option value=\"us_passport\">US passport</option>\n                        <option value=\"driving_license\">Driving license</option>\n                    </select>\n                    \n                </div>\n                {errors.idType && errorMessage('Choose ID Type')}\n                <div>\n                    <input \n                        type=\"text\" \n                        className=\"signInput\"\n                        name=\"idNumber\"\n                        placeholder=\"ID number\"\n                        required\n                        ref={register({required: true})}\n                    />\n                    \n                </div>\n                {errors.idNumber && errorMessage('ID Number is required!')}\n                <div>\n                    <input \n                        type=\"tel\" \n                        className=\"signInput\"\n                        name=\"mobilePhone\"\n                        placeholder=\"Mobile phone\"\n                        required\n                        ref={register({required: true})}\n                    />\n                    \n                </div>\n                {errors.mobilePhone && errorMessage('Mobile phone is required!')}\n                <div>\n                    <input \n                        type=\"tel\" \n                        className=\"signInput\"\n                        name=\"homePhone\"\n                        placeholder=\"Home phone\"\n                        required\n                        ref={register({required: true})}\n                    />\n                    \n                </div>\n                {errors.homePhone && errorMessage('Home phone is required!')}\n                <div className=\"signCategory\">\n                    <label htmlFor=\"category\">Category: </label>\n                    <div id=\"category\">\n                        <input \n                            type=\"radio\" \n                            id=\"cat_none\"\n                            value=\"\"\n                            ref={register}\n                            name=\"category\"\n                        />\n                        <label htmlFor=\"cat_none\">None</label>\n                        <input \n                            type=\"radio\" \n                            id=\"cat_military\"\n                            value=\"military\"\n                            ref={register}\n                            name=\"category\"\n                        />\n                        <label htmlFor=\"cat_military\">Military</label>\n                        <input \n                            type=\"radio\"\n                            id=\"cat_vip\"\n                            value=\"vip\"\n                            ref={register}\n                            name=\"category\"\n                        />\n                        <label htmlFor=\"cat_vip\">Vip</label>\n                    </div>\n                </div>\n                <div>\n                    <button type=\"submit\" className=\"signupButton\">Submit</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Signup;","import React from 'react';\nimport {Link, useHistory} from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteUser, signOut } from '../../actions';\n\nconst Navigation = () => {\n    const history = useHistory();\n\n    const isLogged = useSelector(state => state.isLogged);\n    const dispatch = useDispatch();\n\n\n    const toProfile = () => {\n        history.push('/profile');\n    }\n\n    const log = () => {\n        if(!isLogged){\n            return (\n                <div>\n                    <button className=\"navButton\" onClick={()=>{history.push('/login')}}>Log in</button>\n                    <button className=\"navButton\" onClick={()=>{history.push('/signup')}}>Sign up</button>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"navLoggedIn\">\n                    <FontAwesomeIcon icon={faUserCircle} className=\"userIcon\" onClick={toProfile}/>\n                    <button className=\"navButton\" onClick={()=>{\n                        \n                        dispatch(signOut());\n                        dispatch(deleteUser());\n\n                        history.push('/');\n                    }}>Log out</button>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <div>\n            <nav className=\"navigation\">\n                <ul>\n                    <li>\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/booking\">Booking</Link>\n                    </li>\n\n                    {isLogged && \n                        <li>\n                            <Link to=\"/profile\">Profile</Link>\n                        </li>\n                    }\n                </ul>\n                {log()}\n            </nav>\n        </div>\n    );\n}\n\nexport default Navigation;","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport { useSelector } from 'react-redux';\n\nconst Profile = () => {\n    const isLogged = useSelector(state => state.isLogged);\n    const user = useSelector(state => state.user);\n    \n    const [pass, setPass] = useState(\"*\".repeat(user.password.length));\n\n    const toggleVisibility = () => {\n        if(pass === user.password){\n            setPass(\"*\".repeat(user.password.length));\n        } else {\n            setPass(user.password);\n        }\n    }\n\n    if(!isLogged){\n        return \"\";\n    }\n\n    return (\n        <div className=\"Profile\">\n            {console.log(user)}\n            <FontAwesomeIcon icon={faUserCircle} className=\"userProfileIcon\"/>\n            <h3>{`${user.firstname} ${user.lastname}`}</h3>\n            <label>Login: </label> {user.login} <br />\n            <label>Address: </label> {user.address} <br />\n            <label>Mobile phone: </label> {user.mobile_phone} <br />\n            <label>Home phone: </label> {user.home_phone} <br />\n            <label>Password: </label> {pass} <button onClick={toggleVisibility}>Show</button><br />\n        </div>\n    );\n}\n\nexport default Profile;","import axios from 'axios';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport serverPath from '../../api/path';\nimport { useDispatch } from 'react-redux';\nimport { setHotelsList } from '../../actions';\n\n\nconst Booking = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const {target} = event;\n        const dest = target.querySelector('.dest').value;\n        const startDate = target.querySelector('#startDate').value;\n        const endDate = target.querySelector('#endDate').value;\n        axios.post(`${serverPath}/services/booking/query`, {\n            destination: dest,\n            start: startDate,\n            end: endDate,\n            })\n            .then(res => {\n                dispatch(setHotelsList(res.data));\n                history.push('/booking/hotels');\n            })\n            .catch(error => {\n                window.alert(\"Cannot access the server!\");\n                console.log(error);\n            })\n    }\n\n    return (\n        <div className=\"Booking\">\n            <h3>Find Hotels</h3>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" className=\"dest\" placeholder=\"Enter destination\"/>\n                <label>Arrival: </label>\n                <input type=\"date\" className=\"bookingDate\" id=\"startDate\" required/>\n                <label>Departure: </label>\n                <input type=\"date\" className=\"bookingDate\" id=\"endDate\" />\n                <div>\n                    <button type=\"submit\" className=\"findHotelsButton\">Find hotels</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Booking;","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst QueryResults = () => {\n    const hotelsList = useSelector(state => state.hotelsList);\n\n    return (\n        <div className=\"QueryResults\">\n            <h3>Hotels Available</h3>\n            {hotelsList.forEach(hotel => {\n                return <p>{hotel.name}</p>\n            })}\n        </div>\n    );\n}\n\nexport default QueryResults;","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Home from './routes/Home/Home';\nimport Login from './routes/Auth/Login';\nimport Signup from './routes/Auth/Signup';\nimport Navigation from './components/Navigation/Navigation';\nimport Profile from './routes/Profile/Profile';\nimport Booking from './routes/Booking/Booking';\nimport QueryResults from './routes/Booking/QueryResults';\nimport { connect } from 'react-redux';\n\nimport './App.css';\n\nclass App extends Component {\n\n  componentDidMount(){\n\n  }\n\n  render(){\n    return (\n      <Router basename=\"/backend_war_exploded\">\n        <div className=\"App\">\n          <Navigation />\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/booking\">\n              <Booking />\n            </Route>\n            <Route exact path=\"/booking/hotels\">\n              <QueryResults />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n          </Switch>\n\n        </div>\n      </Router>\n    );\n  }\n}\n\n// first mapStateToProps,\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    isLogged: state.isLogged,\n  }\n}\n// second mapDispatchToProps,\n\nexport default connect(mapStateToProps, null)(App);\n","import * as actions from '../actions/types';\n\nconst isLoggedReducer = (state = false, action) => {\n    switch(action.type){\n        case actions.SIGN_IN:\n            return true;\n        case actions.SIGN_OUT:\n            return false;\n        default:\n            return state;\n    }\n}\n\nexport default isLoggedReducer;","import * as actions from '../actions/types';\n\nconst userReducer = (state = {}, action) => {\n    switch(action.type){\n        case actions.SET_USER:\n            return {...action.payload}\n        case actions.DELETE_USER:\n            return {};\n        default:\n            return state;\n    }\n}\n\nexport default userReducer;","import * as actions from '../actions/types';\n\nconst hotelsListReducer = (state = [], action) => {\n    switch(action.type){\n        case actions.SET_HOTELS_LIST:\n            return action.payload;\n        case actions.CLEAR_HOTELS_LIST:\n            return [];\n        default:\n            return state;\n    }\n}\n\nexport default hotelsListReducer;","import isLoggedReducer from './isLogged';\nimport userReducer from './user';\nimport hotelsListReducer from './hotelsList';\nimport { combineReducers } from 'redux';\n\nconst all = combineReducers({\n    isLogged: isLoggedReducer,\n    user: userReducer,\n    hotelsList: hotelsListReducer,\n});\n\nexport default all;","import { createStore } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage/session\";\n\nimport allReducers from \"./reducers\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, allReducers);\n\nexport const store = createStore(\n  persistedReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}