{"version":3,"sources":["routes/Home/Home.js","api/path.js","routes/Auth/Login.js","actions/index.js","actions/types.js","routes/Auth/Signup.js","components/Navigation/Navigation.js","components/BookingCard.js","routes/Profile/Profile.js","routes/Booking/Booking.js","routes/Booking/Hotel.js","components/HotelCard.js","routes/Booking/QueryResults.js","App.js","reducers/isLogged.js","reducers/user.js","reducers/hotelsList.js","reducers/userBookings.js","reducers/index.js","configureStore.js","index.js"],"names":["Home","useSelector","state","isLogged","user","className","path","Login","dispatch","useDispatch","history","useHistory","useForm","register","handleSubmit","errors","useState","loginError","setLoginError","onSubmit","formData","axios","post","serverPath","login","logLogin","password","logPassword","then","res","console","log","data","Object","keys","length","type","payload","push","catch","error","window","alert","name","placeholder","required","ref","minLength","style","color","onClick","Signup","mode","watch","validLogin","setValidLogin","errorMessage","errMessage","loginValue","document","getElementById","value","firstname","lastname","id_type","idType","id_number","idNumber","address","mobile_phone","mobilePhone","home_phone","homePhone","category","hotel_id","user_type","validate","letters","test","digits","confirmPassword","repeatPassword","id","onChange","target","htmlFor","Navigation","toProfile","to","icon","faUserCircle","BookingCard","booking","hotelName","hotelAddress","city","roomNumber","roomTypeName","checkIn","checkOut","bill","Profile","bookings","userBookings","useEffect","bookingState","repeat","pass","setPass","map","b","key","bookingId","Booking","event","preventDefault","dest","querySelector","startDate","endDate","destination","start","end","withRouter","props","allHotels","hotelsList","hotel","find","h","Number","match","params","roomTypes","rT","number","roomDemand","setRoomDemand","addServices","capacity","size","fixedPrice","rooms","min","e","prev","d","guestId","additionalServices","HotelCard","description","QueryResults","App","basename","exact","Component","connect","isLoggedReducer","action","userReducer","hotelsListReducer","userBookingsReducer","all","combineReducers","userBookingsList","persistConfig","storage","persistedReducer","persistReducer","allReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","StrictMode","loading"],"mappings":"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","file":"static/js/main.74042eac.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst Home = () => {\n\n    const isLogged = useSelector(state => state.isLogged);\n    const user = useSelector(state => state.user);\n\n    return (\n        <main className=\"Home\">\n            <div className=\"HomeMain\">\n                <h3 className=\"homeWelcome\">Welcome to our Hotel Chain!</h3>\n                <p className=\"homeText\">At our Hotel Chain, all-inclusive is synonymous with luxury. Our unique All Inclusive – All Exclusive offering combines all-inclusive advantages with exclusive privileges. \n                    The Hotel Chain offers exceptional escapes that go beyond the imagination to open a new world of horizons for our guests. Our expertise for balancing the ultra-all-inclusive concept with a vibrant, \n                    luxury ambience and family friendly adventures truly defines the Rixos experience. Rixos makes holiday dreams come true for everyone.</p>\n            </div>\n            <div className=\"HomeSecond\">\n                <div className=\"justBack\">\n                    <h3 className=\"homeWelcome\">Experience Something New</h3>\n                    <p className=\"homeText\">Close to home or across the world, Hilton is there for you with memorable offers and experiences. Check out what’s new.</p>\n                </div>\n            </div>\n        </main>\n    );\n}\n\nexport default Home;","const path = \"http://localhost:8080/backend_war_exploded\";\n\nexport default path;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { signIn, setUser, deleteUser, signOut, signInAt } from '../../actions';\n\n\nimport serverPath from '../../api/path';\n\nconst Login = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { register, errors, handleSubmit } = useForm();\n    const [loginError, setLoginError] = useState(\"\");\n\n    const logIn = formData => {\n        axios.post(`${serverPath}/services/auth/login`, {\n                login: formData.logLogin,\n                password: formData.logPassword,\n            })\n            .then(res => {\n                console.log(res.data);\n                console.log(Object.keys(res.data).length);\n                if(!(Object.keys(res.data).length === 0)){\n\n                    dispatch(signIn());\n                    dispatch(setUser(res.data));\n\n                    setLoginError(\"\");\n                    history.push('/');\n                } else {\n\n                    dispatch(deleteUser());\n                    dispatch(signOut());\n\n                    setLoginError(\"Invalid login or password!\");\n                }\n            })\n            .catch((error)=>{\n                dispatch(deleteUser());\n                dispatch(signOut());\n                \n                window.alert(\"Cannot access the server!\");\n                console.log(error);\n             });\n    }\n\n    return (\n        <div className=\"Login\">\n            <div>\n                <h3>Log in</h3>\n                <form onSubmit={handleSubmit(logIn)}>\n                    <div>\n                        <input \n                            type=\"text\" \n                            className=\"loginInput\"\n                            name=\"logLogin\"\n                            placeholder=\"Enter login\"\n                            required\n                            ref={register({required: true})}\n                        />\n                    </div>\n                    <div>\n                        <input \n                            type=\"password\" \n                            className=\"loginInput\"\n                            name=\"logPassword\"\n                            placeholder=\"Enter password\"\n                            required\n                            minLength=\"6\"\n                            ref={register({required: true})}\n                        />\n                    </div>\n                    {loginError && <p style={{color: \"red\"}}>{loginError}</p>}\n                    <button className=\"loginButton\" type=\"submit\">Log in</button>\n                    <p className=\"toSignupText\">Do not have an account?</p>\n                    <button className=\"signupButton\" onClick={()=>{history.push('/signup')}}>Sign up</button>\n                </form>\n            </div>\n        </div>\n    );;\n}\n\nexport default Login;","import * as actions from './types';\n\nexport const signIn = () => ({type: actions.SIGN_IN});\n\nexport const signOut = () => ({type: actions.SIGN_OUT});\n\nexport const setUser = user => ({type: actions.SET_USER, payload: user});\n\nexport const deleteUser = () => ({type: actions.DELETE_USER});\n\nexport const setHotelsList = hotelsList => ({type: actions.SET_HOTELS_LIST, payload: hotelsList});\n\nexport const clearHotelsList = () => ({type: actions.CLEAR_HOTELS_LIST});\n\nexport const setBookingsList = bookingsList => ({type: actions.SET_BOOKINGS_LIST, payload: bookingsList});\n\nexport const clearBookingsList = () => ({type: actions.CLEAR_BOOKINGS_LIST});","export const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const SET_USER = \"SET_USER\";\nexport const DELETE_USER = \"DELETE_USER\";\nexport const SET_HOTELS_LIST = \"SET_HOTELS_LIST\";\nexport const CLEAR_HOTELS_LIST = \"CLEAR_HOTELS_LIST\";\nexport const SET_BOOKINGS_LIST = \"SET_BOOKINGS_LIST\";\nexport const CLEAR_BOOKINGS_LIST = \"CLEAR_BOOKINGS_LIST\";\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\nimport axios from 'axios';\n\nimport serverPath from '../../api/path';\n\nconst Signup = () => {\n\n    const history = useHistory();\n    const { register, errors, watch, handleSubmit } = useForm({mode:\"onChange\"});\n    const [validLogin, setValidLogin] = useState(true);\n\n    const errorMessage = errMessage => {\n        return <p className=\"validError\">{errMessage}</p>\n    }\n\n    const handleLogin = ({target}) => {\n        axios.post(`${serverPath}/services/auth/checkLogin`, {\n            login: target.value,\n            password: \"\",\n        })\n            .then(res => {\n                setValidLogin(!res.data);\n            })\n            .catch(error => {\n                window.alert(\"Cannot access the server!\");\n                console.log(error);\n            });\n    }\n\n    const onSubmit = formData => {\n        if(validLogin){\n            const loginValue = document.getElementById('signLogin').value;\n            axios.post(`${serverPath}/services/auth/signup`, {\n                firstname: formData.firstname,\n                lastname: formData.lastname,\n                password: formData.password,\n                login: loginValue,\n                id_type: formData.idType,\n                id_number: formData.idNumber,\n                address: formData.address,\n                mobile_phone: formData.mobilePhone,\n                home_phone: formData.homePhone,\n                category: formData.category,\n                hotel_id: 0,\n                user_type: \"guest\",\n              })\n              .then(res => {\n                window.alert(\"You are signed up successfully!\");\n                history.push('/login');\n              })\n              .catch(error => {\n                window.alert(\"Cannot access the server!\");\n                console.log(error);\n              });    \n        }\n        \n    }\n\n    return (\n        <div className=\"Signup\">\n            <h3>Sign up</h3>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div>\n                    <input \n                        type=\"text\" \n                        className=\"signInput\" \n                        name=\"firstname\"\n                        placeholder=\"Firstname\"\n                        required\n                        ref={register({required: true})}\n                    />\n                </div>\n                {errors.firstname && errorMessage('Firstname is required!')}\n\n                <div>\n                    <input \n                        type=\"text\" \n                        className=\"signInput\"\n                        name=\"lastname\"\n                        placeholder=\"Lastname\"\n                        required\n                        ref={register({required: true})}\n                    />\n                    \n                </div>\n                {errors.lastname && errorMessage('Lastname is required!')}\n                <div>\n                    <input \n                        type=\"password\" \n                        className=\"signInput\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        ref={register({minLength: 6, validate: {\n                            letters: value => /[a-zA-Z]/.test(value),\n                            digits: value => /[0-9]/.test(value),\n                        }})}\n                    />\n                    \n                </div>\n                {errors.password && errors.password.type === \"letters\" && errorMessage('Password should contain at least 1 english letter!')}\n                {errors.password && errors.password.type === \"minLength\" && errorMessage('Password should contain at least 6 characters!')}\n                {errors.password && errors.password.type === \"digits\" && errorMessage('Password should contain at least 1 digit!')}\n                <div>\n                    <input \n                        type=\"password\" \n                        className=\"signInput\"\n                        name=\"repeatPassword\"\n                        placeholder=\"Re-type password\"\n                        ref={register({validate: {\n                            confirmPassword: value => value === watch('password'),\n                        }})}\n                    />\n                    \n                </div>\n                {errors.repeatPassword && errors.repeatPassword.type === \"confirmPassword\" && errorMessage('Passwords do not match!')}\n                <div>\n                    <input \n                        type=\"text\"\n                        id=\"signLogin\"\n                        className=\"signInput\"\n                        name=\"signLogin\"\n                        placeholder=\"Login\"\n                        required\n                        onChange={handleLogin}\n                    />\n                    \n                </div>\n                {!validLogin && errorMessage('This login is not available!')}\n                <div>\n                    <input \n                        type=\"text\"\n                        className=\"signInput\"\n                        name=\"address\"\n                        placeholder=\"Address\"\n                        required\n                        ref={register({required: true})}\n                    />\n                    \n                </div>\n                {errors.address && errorMessage('Address is required!')}\n                <div className=\"signIdType\">\n                    <label htmlFor=\"idType\" id=\"id_type\">ID type: </label>\n                    <select \n                        name=\"idType\"\n                        required\n                        ref={register({required: true})}\n                    >\n                        <option value=\"\"></option>\n                        <option value=\"US passport\">US passport</option>\n                        <option value=\"Driving license\">Driving license</option>\n                    </select>\n                    \n                </div>\n                {errors.idType && errorMessage('Choose ID Type')}\n                <div>\n                    <input \n                        type=\"text\" \n                        className=\"signInput\"\n                        name=\"idNumber\"\n                        placeholder=\"ID number\"\n                        required\n                        ref={register({required: true})}\n                    />\n                    \n                </div>\n                {errors.idNumber && errorMessage('ID Number is required!')}\n                <div>\n                    <input \n                        type=\"tel\" \n                        className=\"signInput\"\n                        name=\"mobilePhone\"\n                        placeholder=\"Mobile phone\"\n                        required\n                        ref={register({required: true})}\n                    />\n                    \n                </div>\n                {errors.mobilePhone && errorMessage('Mobile phone is required!')}\n                <div>\n                    <input \n                        type=\"tel\" \n                        className=\"signInput\"\n                        name=\"homePhone\"\n                        placeholder=\"Home phone\"\n                        required\n                        ref={register({required: true})}\n                    />\n                    \n                </div>\n                {errors.homePhone && errorMessage('Home phone is required!')}\n                <div className=\"signCategory\">\n                    <label htmlFor=\"category\">Category: </label>\n                    <div id=\"category\">\n                        <input \n                            type=\"radio\" \n                            id=\"cat_none\"\n                            value=\"\"\n                            ref={register}\n                            name=\"category\"\n                        />\n                        <label htmlFor=\"cat_none\">None</label>\n                        <input \n                            type=\"radio\" \n                            id=\"cat_military\"\n                            value=\"Military\"\n                            ref={register}\n                            name=\"category\"\n                        />\n                        <label htmlFor=\"cat_military\">Military</label>\n                        <input \n                            type=\"radio\" \n                            id=\"cat_government\"\n                            value=\"Government\"\n                            ref={register}\n                            name=\"category\"\n                        />\n                        <label htmlFor=\"cat_government\">Government</label>\n                        <input \n                            type=\"radio\"\n                            id=\"cat_vip\"\n                            value=\"VIP\"\n                            ref={register}\n                            name=\"category\"\n                        />\n                        <label htmlFor=\"cat_vip\">Vip</label>\n                    </div>\n                </div>\n                <div>\n                    <button type=\"submit\" className=\"signupButton\">Submit</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Signup;","import React from 'react';\nimport {Link, useHistory} from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteUser, signOut } from '../../actions';\n\nconst Navigation = () => {\n    const history = useHistory();\n\n    const isLogged = useSelector(state => state.isLogged);\n    const dispatch = useDispatch();\n\n\n    const toProfile = () => {\n        history.push('/profile');\n    }\n\n    const log = () => {\n        if(!isLogged){\n            return (\n                <div>\n                    <button className=\"navButton\" onClick={()=>{history.push('/login')}}>Log in</button>\n                    <button className=\"navButton\" onClick={()=>{history.push('/signup')}}>Sign up</button>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"navLoggedIn\">\n                    <FontAwesomeIcon icon={faUserCircle} className=\"userIcon\" onClick={toProfile}/>\n                    <button className=\"navButton\" onClick={()=>{\n                        \n                        dispatch(signOut());\n                        dispatch(deleteUser());\n\n                        history.push('/');\n                    }}>Log out</button>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <div>\n            <nav className=\"navigation\">\n                <ul>\n                    <li>\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/booking\">Booking</Link>\n                    </li>\n\n                    {isLogged && \n                        <li>\n                            <Link to=\"/profile\">Profile</Link>\n                        </li>\n                    }\n                </ul>\n                {log()}\n            </nav>\n        </div>\n    );\n}\n\nexport default Navigation;","import React from 'react';\n\nconst BookingCard = ({booking: {hotelName, hotelAddress, city, roomNumber, roomTypeName, checkIn, checkOut, bill, name}}) => {\n    \n    return (\n        <div className=\"BookingCard\">\n            <h3>{hotelName}</h3>\n            <p>{`${city}, ${hotelAddress}`}</p><br />\n            <p><b>Check in: </b>{checkIn}</p>\n            <p><b>Check out: </b>{checkOut}</p>\n            <p><b>Room Type: </b>{roomTypeName}</p>\n            <p><b>Room Number: </b>{roomNumber}</p>\n        </div>\n    );\n}\n\nexport default BookingCard;","import React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport {setBookingsList, clearBookingsList} from '../../actions';\nimport BookingCard from '../../components/BookingCard';\n\nimport serverPath from '../../api/path';\n\nconst Profile = () => {\n    const isLogged = useSelector(state => state.isLogged);\n    const user = useSelector(state => state.user);\n    const bookings = useSelector(state => state.userBookings);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        axios.post(`${serverPath}/services/profile/getBookings`, {\n            id: user.id,\n            bookingState: \"all\",\n        })\n        .then(res => {\n            dispatch(setBookingsList(res.data));\n        })\n        .catch(error => {\n            window.alert(\"Cannot access the server!\");\n            console.log(error);\n        })\n    }, []);\n    \n    const [pass, setPass] = useState(\"*\".repeat(user.password.length));\n\n    const toggleVisibility = () => {\n        if(pass === user.password){\n            setPass(\"*\".repeat(user.password.length));\n        } else {\n            setPass(user.password);\n        }\n    }\n\n    if(!isLogged){\n        return \"\";\n    }\n\n    return (\n        <div className=\"Profile\">\n            <FontAwesomeIcon icon={faUserCircle} className=\"userProfileIcon\"/>\n            <h3>{`${user.firstname} ${user.lastname}`}</h3>\n            <label>Login: </label> {user.login} <br />\n            <label>Address: </label> {user.address} <br />\n            <label>Mobile phone: </label> {user.mobile_phone} <br />\n            <label>Home phone: </label> {user.home_phone} <br />\n            <label>Password: </label> {pass} <button onClick={toggleVisibility}>Show</button><br />\n            <h3 className=\"profileBookingTitle\">Bookings</h3>\n            <div className=\"profileBookings\">\n                {bookings.map(b => <BookingCard key={b.bookingId} booking={b}/>)}\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;","import axios from 'axios';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport serverPath from '../../api/path';\nimport { useDispatch } from 'react-redux';\nimport { setHotelsList } from '../../actions';\n\n\nconst Booking = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const {target} = event;\n        const dest = target.querySelector('.dest').value;\n        const startDate = target.querySelector('#startDate').value;\n        const endDate = target.querySelector('#endDate').value;\n        axios.post(`${serverPath}/services/booking/query`, {\n            destination: dest,\n            start: startDate,\n            end: endDate,\n            })\n            .then(res => {\n                dispatch(setHotelsList(res.data));\n                history.push('/booking/hotels');\n            })\n            .catch(error => {\n                window.alert(\"Cannot access the server!\");\n                console.log(error);\n            })\n    }\n\n    return (\n        <div className=\"Booking\">\n            <h3>Find Hotels</h3>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" className=\"dest\" placeholder=\"Enter destination\"/>\n                <label>Arrival: </label>\n                <input type=\"date\" className=\"bookingDate\" id=\"startDate\" required/>\n                <label>Departure: </label>\n                <input type=\"date\" className=\"bookingDate\" id=\"endDate\" />\n                <div>\n                    <button type=\"submit\" className=\"findHotelsButton\">Find hotels</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Booking;","import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport serverPath from '../../api/path';\n\nimport '../Style.scss';\n\nconst Hotel = props => {\n\n    const history = useHistory();\n\n    const allHotels = useSelector(state => state.hotelsList);\n    const user = useSelector(state => state.user);\n\n    const hotel = allHotels.find(h => h.id === Number(props.match.params.id));\n    console.log(hotel);\n\n    const [roomDemand, setRoomDemand] = useState(hotel.roomTypes.map(rT => {return {name: rT.name, number: 0}}));\n    const [addServices, setAddServices] = useState([]);\n\n    console.log(roomDemand);\n\n    const setDemand = (target, name) => {\n        setRoomDemand(prev => {\n            return [\n                ...prev.map(d => d.name === name ? {name, number: Number(target.value)} : d)\n            ]\n        })\n    }\n\n    const createBooking = () => {\n        axios.post(`${serverPath}/services/booking/create`, {\n            hotelName: hotel.name,\n            guestId: user.id,\n            roomDemand: roomDemand,\n            additionalServices: addServices,\n        })\n            .then(res => {\n                window.alert(\"Booking was created successfully!\");\n                history.push('/booking');\n            })\n            .catch(error => {\n                window.alert(\"Cannot access the server!\");\n                console.log(error);\n            })\n    }\n\n    return (\n        <div className=\"Hotel\">\n            <h3>{hotel.name}</h3>\n            {hotel.roomTypes.map(rT => <div className=\"roomType\" key={rT.id}>\n                <div>\n                    {rT.name}\n                    <p>{`Capacity: ${rT.capacity}`}</p>\n                    <p>{`Size: ${rT.size}`}</p>\n                    <p>{`Basic price: ${rT.fixedPrice}KZT`}</p>\n                    <p>{`Available rooms: ${rT.rooms.length}`}</p>\n                </div>\n                <div>\n                    <label>Enter number of rooms:</label>\n                    <input type=\"number\" min=\"0\" className=\"roomDemandInput\" onChange={(e)=> {setDemand(e.target, rT.name)}}/>\n                </div>\n                \n            </div>)}\n            <button className=\"button\" onClick={createBooking}>Book</button>\n        </div>\n    );\n}\n\nexport default withRouter(Hotel);","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport './Style.scss';\n\nconst HotelCard = ({hotel: {name, city, address, description, id}}) => {\n\n    const history = useHistory();\n\n    const toHotelPage = (e) => {\n        history.push(`/booking/${id}`);\n    }\n\n    return (\n        <div className=\"HotelCard\" onClick={toHotelPage}>\n            <h3>{name}</h3>\n            <p>{`${city}, ${address}`}</p>\n            <p>{description}</p>\n        </div>\n    );\n}\n\nexport default HotelCard;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport HotelCard from '../../components/HotelCard';\n\nconst QueryResults = () => {\n    const hotelsList = useSelector(state => state.hotelsList);\n\n    return (\n        <div className=\"QueryResults\">\n            <h3>Hotels Available</h3>\n            {hotelsList.map(hotel => {\n                return <HotelCard key={hotel.id} hotel={hotel}/>\n            })}\n        </div>\n    );\n}\n\nexport default QueryResults;","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Home from './routes/Home/Home';\nimport Login from './routes/Auth/Login';\nimport Signup from './routes/Auth/Signup';\nimport Navigation from './components/Navigation/Navigation';\nimport Profile from './routes/Profile/Profile';\nimport Booking from './routes/Booking/Booking';\nimport Hotel from './routes/Booking/Hotel';\nimport QueryResults from './routes/Booking/QueryResults';\nimport { connect } from 'react-redux';\n\nimport './App.scss';\n\nclass App extends Component {\n\n  componentDidMount(){\n\n  }\n\n  render(){\n    return (\n      <Router basename=\"/backend_war_exploded\">\n        <div className=\"App\">\n          <Navigation />\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/booking\">\n              <Booking />\n            </Route>\n            <Route exact path=\"/booking/hotels\">\n              <QueryResults />\n            </Route>\n            <Route exact path=\"/booking/:id\">\n              <Hotel />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n          </Switch>\n\n        </div>\n      </Router>\n    );\n  }\n}\n\n// first mapStateToProps,\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    isLogged: state.isLogged,\n  }\n}\n// second mapDispatchToProps,\n\nexport default connect(mapStateToProps, null)(App);\n","import * as actions from '../actions/types';\n\nconst isLoggedReducer = (state = false, action) => {\n    switch(action.type){\n        case actions.SIGN_IN:\n            return true;\n        case actions.SIGN_OUT:\n            return false;\n        default:\n            return state;\n    }\n}\n\nexport default isLoggedReducer;","import * as actions from '../actions/types';\n\nconst userReducer = (state = {}, action) => {\n    switch(action.type){\n        case actions.SET_USER:\n            return {...action.payload}\n        case actions.DELETE_USER:\n            return {};\n        default:\n            return state;\n    }\n}\n\nexport default userReducer;","import * as actions from '../actions/types';\n\nconst hotelsListReducer = (state = [], action) => {\n    switch(action.type){\n        case actions.SET_HOTELS_LIST:\n            return action.payload;\n        case actions.CLEAR_HOTELS_LIST:\n            return [];\n        default:\n            return state;\n    }\n}\n\nexport default hotelsListReducer;","import * as actions from '../actions/types';\n\nconst userBookingsReducer = (state = [], action) => {\n    switch(action.type){\n        case actions.SET_BOOKINGS_LIST:\n            return action.payload;\n        case actions.CLEAR_BOOKINGS_LIST:\n            return [];\n        default:\n            return state;\n    }\n}\n\nexport default userBookingsReducer;","import isLoggedReducer from './isLogged';\nimport userReducer from './user';\nimport hotelsListReducer from './hotelsList';\nimport userBookingsList from './userBookings';\nimport { combineReducers } from 'redux';\n\nconst all = combineReducers({\n    isLogged: isLoggedReducer,\n    user: userReducer,\n    hotelsList: hotelsListReducer,\n    userBookings: userBookingsList,\n});\n\nexport default all;","import { createStore } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage/session\";\n\nimport allReducers from \"./reducers\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, allReducers);\n\nexport const store = createStore(\n  persistedReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}